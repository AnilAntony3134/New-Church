/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/posts/[id]";
exports.ids = ["pages/posts/[id]"];
exports.modules = {

/***/ "./node_modules/@swc/helpers/lib/_extends.js":
/*!***************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_extends.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _extends;\nfunction _extends() {\n    return extends_.apply(this, arguments);\n}\nfunction extends_() {\n    extends_ = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return extends_.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fZXh0ZW5kcy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzQkFBc0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NodXJjaC8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19leHRlbmRzLmpzPzM5OGEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfZXh0ZW5kcztcbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICAgIHJldHVybiBleHRlbmRzXy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xufVxuZnVuY3Rpb24gZXh0ZW5kc18oKSB7XG4gICAgZXh0ZW5kc18gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHRhcmdldCkge1xuICAgICAgICBmb3IodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IodmFyIGtleSBpbiBzb3VyY2Upe1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgfTtcbiAgICByZXR1cm4gZXh0ZW5kc18uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_extends.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_default.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_default.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _interopRequireDefault;\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkM7QUFDN0M7QUFDQSxDQUFDLEVBQUM7QUFDRixrQkFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaHVyY2gvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX2RlZmF1bHQuanM/OWI3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_default.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_interop_require_wildcard.js":
/*!********************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_interop_require_wildcard.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _interopRequireWildcard;\nfunction _interopRequireWildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) {\n        return obj;\n    }\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n        return {\n            default: obj\n        };\n    }\n    var cache = _getRequireWildcardCache(nodeInterop);\n    if (cache && cache.has(obj)) {\n        return cache.get(obj);\n    }\n    var newObj = {};\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for(var key in obj){\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) {\n                Object.defineProperty(newObj, key, desc);\n            } else {\n                newObj[key] = obj[key];\n            }\n        }\n    }\n    newObj.default = obj;\n    if (cache) {\n        cache.set(obj, newObj);\n    }\n    return newObj;\n}\nfunction _getRequireWildcardCache(nodeInterop1) {\n    if (typeof WeakMap !== \"function\") return null;\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop1);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9faW50ZXJvcF9yZXF1aXJlX3dpbGRjYXJkLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDO0FBQzdDO0FBQ0EsQ0FBQyxFQUFDO0FBQ0Ysa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2h1cmNoLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9saWIvX2ludGVyb3BfcmVxdWlyZV93aWxkY2FyZC5qcz8wNTFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQ7XG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChvYmosIG5vZGVJbnRlcm9wKSB7XG4gICAgaWYgKCFub2RlSW50ZXJvcCAmJiBvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHtcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICB9XG4gICAgaWYgKG9iaiA9PT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiICYmIHR5cGVvZiBvYmogIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgICAgIH07XG4gICAgfVxuICAgIHZhciBjYWNoZSA9IF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7XG4gICAgaWYgKGNhY2hlICYmIGNhY2hlLmhhcyhvYmopKSB7XG4gICAgICAgIHJldHVybiBjYWNoZS5nZXQob2JqKTtcbiAgICB9XG4gICAgdmFyIG5ld09iaiA9IHt9O1xuICAgIHZhciBoYXNQcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgJiYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICBpZiAoa2V5ICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICB2YXIgZGVzYyA9IGhhc1Byb3BlcnR5RGVzY3JpcHRvciA/IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqLCBrZXkpIDogbnVsbDtcbiAgICAgICAgICAgIGlmIChkZXNjICYmIChkZXNjLmdldCB8fCBkZXNjLnNldCkpIHtcbiAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLCBrZXksIGRlc2MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuICAgIGlmIChjYWNoZSkge1xuICAgICAgICBjYWNoZS5zZXQob2JqLCBuZXdPYmopO1xuICAgIH1cbiAgICByZXR1cm4gbmV3T2JqO1xufVxuZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wMSkge1xuICAgIGlmICh0eXBlb2YgV2Vha01hcCAhPT0gXCJmdW5jdGlvblwiKSByZXR1cm4gbnVsbDtcbiAgICB2YXIgY2FjaGVCYWJlbEludGVyb3AgPSBuZXcgV2Vha01hcCgpO1xuICAgIHZhciBjYWNoZU5vZGVJbnRlcm9wID0gbmV3IFdlYWtNYXAoKTtcbiAgICByZXR1cm4gKF9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSA9IGZ1bmN0aW9uKG5vZGVJbnRlcm9wKSB7XG4gICAgICAgIHJldHVybiBub2RlSW50ZXJvcCA/IGNhY2hlTm9kZUludGVyb3AgOiBjYWNoZUJhYmVsSW50ZXJvcDtcbiAgICB9KShub2RlSW50ZXJvcDEpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\n");

/***/ }),

/***/ "./node_modules/@swc/helpers/lib/_object_without_properties_loose.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@swc/helpers/lib/_object_without_properties_loose.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = _objectWithoutPropertiesLoose;\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL2xpYi9fb2JqZWN0X3dpdGhvdXRfcHJvcGVydGllc19sb29zZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsdUJBQXVCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2NodXJjaC8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvbGliL19vYmplY3Rfd2l0aG91dF9wcm9wZXJ0aWVzX2xvb3NlLmpzPzRjYjkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZTtcbmZ1bmN0aW9uIF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgICB2YXIgdGFyZ2V0ID0ge307XG4gICAgdmFyIHNvdXJjZUtleXMgPSBPYmplY3Qua2V5cyhzb3VyY2UpO1xuICAgIHZhciBrZXksIGk7XG4gICAgZm9yKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgICAgIHRhcmdldFtrZXldID0gc291cmNlW2tleV07XG4gICAgfVxuICAgIHJldHVybiB0YXJnZXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\n");

/***/ }),

/***/ "./styles/Posts.module.css":
/*!*********************************!*\
  !*** ./styles/Posts.module.css ***!
  \*********************************/
/***/ ((module) => {

eval("// Exports\nmodule.exports = {\n\t\"post_container\": \"Posts_post_container__CJfqa\",\n\t\"post_wrapper\": \"Posts_post_wrapper__SvQNg\",\n\t\"post_banner\": \"Posts_post_banner__VYllb\",\n\t\"post_tag\": \"Posts_post_tag__39hkh\",\n\t\"post_leftwrapper\": \"Posts_post_leftwrapper__p1nDM\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvUG9zdHMubW9kdWxlLmNzcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2h1cmNoLy4vc3R5bGVzL1Bvc3RzLm1vZHVsZS5jc3M/NTFkMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFeHBvcnRzXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJwb3N0X2NvbnRhaW5lclwiOiBcIlBvc3RzX3Bvc3RfY29udGFpbmVyX19DSmZxYVwiLFxuXHRcInBvc3Rfd3JhcHBlclwiOiBcIlBvc3RzX3Bvc3Rfd3JhcHBlcl9fU3ZRTmdcIixcblx0XCJwb3N0X2Jhbm5lclwiOiBcIlBvc3RzX3Bvc3RfYmFubmVyX19WWWxsYlwiLFxuXHRcInBvc3RfdGFnXCI6IFwiUG9zdHNfcG9zdF90YWdfXzM5aGtoXCIsXG5cdFwicG9zdF9sZWZ0d3JhcHBlclwiOiBcIlBvc3RzX3Bvc3RfbGVmdHdyYXBwZXJfX3AxbkRNXCJcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./styles/Posts.module.css\n");

/***/ }),

/***/ "./config/data.js":
/*!************************!*\
  !*** ./config/data.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"blogList\": () => (/* binding */ blogList)\n/* harmony export */ });\nconst blogList = [\n    {\n        id: 1,\n        title: \"BCC\",\n        category: \"History\",\n        subCategory: [\n            \"Services\",\n            \"BCC\",\n            \"Organization\"\n        ],\n        description: `BCC is the extension of the life and times of the apostles, soon after the crucification of Jesus. They feared persecution and death in the hands of his killers. Their faith and belief in him was beginning to set in and doubts disappear by the working of the Holy Spirit who had descended upon them enabling them to speak many languages, filling them with a noble rage to go out into the world and spread the gospel. So intense in sprit where they at that time, that they met within closed doors and talked in chaste whispers. They forsake everything they had and shared among themselves, whatever they had. Not only the apostles, the people who heard them, also brought in whatever they had in cash or kind and food was served to the people who gathered there in the name of resurrected Jesus. Today, the situation is different only in that the word of the lord has been heard all around us. But, like the seeds that fell on the rock or perhaps the wayside, they do not produce any fruit. Our faith in the resurrected Christ and his presence in the Holy Eucharist has to percolate down into our very elements. There is no more places for’ Doubting Thomases’ and people who take the word of our Lord with a pinch of salt. Even in India, which is the largest democracy in the world, where freedom of religion is enshrined in the constitution, persecution of Christians is rampant ,especially in the north. Many of us fear and most of us feel shy to speak about the Gospel of our Lord. It is the opening of our ears and the embolden of ourselves that the BCC aims to achieve. Characteristics of the B.C.Cs \n- Faithfulness to fellowship \n- Word of God becomes the source of their life and relationship \n- They minister to each other in their pastoral, social and educational needs.\n\nThey become an Eucharistic community. Very. Rev. Fr. Richard D’Cruz 2001-2005 Very. Rev. Dr.C. Joseph 2005-2011 Very Rev. Msgr. John D. Bosco 2011-2015 Very. Rev. Fr. George Gomez 2015-2018 Very Rev. Msgr. Nicholas T. The first characteristic of the B.C.Cs is deepening the relationship between the members and the reconciliation between each other, so that they can be witnesses to the love of Christ by breaking all  divisions in the community. This experience of fellowship gives them a sense of belonging and they come to the understanding that Christianity is not commitment to some ideas but commitment to persons. Contribution of the B.C.Cs \n\n1. Increased the participation of laity in the life of the Diocese. \n2. Lay leadership grew qualitatively, especially the leadership of women. \n3. Liturgy and participation in sacraments and family prayer became more active. \n4. Spreading and breaking of the Word of God increased. \n5. Ability to pray spontaneously \n6. Social commitment has increased so that they minister to each other to a large extent. \n7. Developed the different talents of the people. 8. Attitudinal change in the people brought about generosity and deeper fellowship. \n8. People feel that they are the Church and their sense of belongingness increased. \n9. The faith of the people and the capacity to forgive each other have increased. \n10. Popular devotion and active participation in the pious associations increased. \n \n\nA three tier system - Diocese, Vicariate, Parish was introduced. The Basic Christian Communities (BCC) of the parish assembles at least once in a month in one of the houses for the meeting. A BCC unit consists of families from 20 to 30 in number, in a particular geographical area. The programme of the meeting consists of prayer, reading, sharing of the Word, discussion based on the reading, in the background of local need, occasion or a particular situation. The discussions ultimately lead the unit to undertake a particular mission/programme. The meeting can be a celebration of religious festival, local festival, different occasions of family life etc. The method of conduct of meeting is suitably modified to suit the occasion, retaining the basic elements of the B.C.C. Wards are the structures that consist of different BCC units. Parish level leaders meeting are held regularly for the evaluation and implementing of further programmes in the parish In the Forane level, Forane commission meeting is held regularly under the leadership of the priest coordinator of the BCC ministry In the Archdiocese, the Director of B.C.C. convenes the meeting of animators, co-ordinators, and resource team whenever necessary. Latin Arch Diocese, Thiruvananthapuram, BCC’s vision is all about Renewal of Life through the Word in relation to community There are six wards in St Joseph’s Metropolitan Cathedral.\n-  Palayam \n-  Kunnukuzhy East\n-  Kunnukuzhy West\n-  Rishimangalam\n-  Pattom`,\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/image6.jpg\"\n    },\n    {\n        id: 2,\n        title: \"വിശുദ്ധവാര തിരുക്കർമങ്ങൾ \",\n        category: \"Updates\",\n        subCategory: [\n            \"Sevices\",\n            \"KCYM\",\n            \"Youth Ministry \"\n        ],\n        description: \"\",\n        authorName: \"Secretary\",\n        authorAvatar: \"/assets/images/author.jpg\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/assets/Easter Updates.jpg\"\n    },\n    {\n        id: 3,\n        title: \"Catechism\",\n        category: \"Services\",\n        subCategory: [\n            \"Services\",\n            \"Catechism\",\n            \"Youth Ministry\"\n        ],\n        description: \"Documents of religious instruction have been written since the beginning of Christianity and the catechism is typically an assemblage of these smaller documents into one large compilation of Church doctrine and teachings. The catechism of the catholic church is instead a source on which to base such catechisms and other expositions of Catholic doctrine, called a major catechism. What corresponds the more common idea of a catechism is perhaps the Compendium of the Catechism of the Catholic Church. Catechism of the Catholic Church is arranged in four principal parts: The Profession of Faith (the Apostle's Creed) The Celebration of the Christian Mystery (the Sacred Liturgy, the sacraments) Life in Christ (including The Ten Commandments in Roman Catholic theology) Christian Prayer (including The Lord's Prayer) This scheme is often referred to as the Four Pillars of the Faith. . Catechism is taught in Palayam parish on Sundays. Classes are divided on the bases of age groups and Language. In Cathedral, we have catechism classes up to Plus Two. There are almost 650 children and 42 catechism teachers. Catechism Timing: Sunday 8:30 AM – 10.00 AM Catechism Mass for Children.\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/catechism.jpg\"\n    },\n    {\n        id: 4,\n        title: \"History of Church\",\n        category: \"History\",\n        subCategory: [\n            \"History\",\n            \"Trivandrum\",\n            \"Church\"\n        ],\n        description: \"The Archdiocese of Trivandrum (Thiruvananthapuram) is one of the biggest diocese of Kerala having a Catholic population of nearly 2,50,000 people, even after the bifurcation of the Diocese of Neyyattinkara four years ago. The 75 parishes and 44 Mission stations of the Diocese are grouped together into 8 Vicariates in 3 Episcopates. At present we have 133 incardinated priests in the Archdiocese including those retired, studying and working for other Dioceses and 27 religious priests. The very name of this historic city Thiruvananthapuram has a rich meaning The city of Anantha, or the abode of the sacred Serpent Anantha, on which Lord Vishnu, the preserver of the Hindu trinity, reclines. Presiding over one of the most scenic states of the country, it is a beautiful seaside city built on seven hills. Thiru' means Holy; 'Anantha' means Eternal and 'Puram' means City. We say Jerusalem is the Holy City and Rome is the Eternal City. Now Thiruvananthapuram is both Jerusalem and Rome because it means the Holy Eternal City. Christianity in this part dates from the time of the arrival of the Portuguese in India and perhaps earlier. It is very likely that the Franciscan and Dominican missionaries of the middle ages who evangelized Quilon and its suburbs worked also in Trivandrum; some of the churches of this Diocese claim to be of pre-Portuguese origin. With the arrival of the Portuguese but especially with the advent of the pioneer missionary, St Francis Xavier, Christianity spread far and wide in these parts with the result that by the close of the sixteenth century there were well-established Christian communities along the Trivandrum coast. But unfortunately with the suppression of the Society of Jesus, this missionary enterprises came to a close. The second phase of the missionary enterprise in the Diocese begins with the dawn of the present century. The saintly Bishop Benziger who became coadjutor Bishop of Quilon in 1900 and Bishop in 1905 was the apostle who propagated Christianity in the Diocese through the fragrance of his saintly life, wise leadership and unceasing assistance to his missionary priests. In 1931 when he retired to the Carmel Hill Monastery, Trivandrum, there were Christian communities established in almost all places of the interior region .As early as 1919, Bishop Benziger recommended the establishment of the Diocese of Trivandrum ,but it materialized only after his retirement. On July 1,1937, by the Bull In Ora Malabarica Pope Pius XI created the Diocese of Trivandrum with the four taluks of Neyyantinkara, Nedumangad, Trivandrum and Chirayinkeezh bifurcated from the diocese of Quilon. Bishop Vincent V Dereere, OCD., Bishop of Quilon was transferred to the newly erected Diocese of Trivandrum which was entrusted to the Carmelites of the Flanders Province (Belgium). In 1952 when the Diocese of Alleppey was erected by the bifurcation of the Padroado Diocese of Cochin, the stripe of coastal parishes which formed the Trivandrum Portuguese Mission was temporarily annexed to the Diocese of Trivandrum with Bishop Vincent V. Dereere as its administrator. On May, 20, 1955, this territory was definitely integrated in the Diocese of Trivandrum. On October 24, 1966 when Bishop Vincent V.Dereere OCD. resigned from the See of rivandrum, Bishop Peter Bernard Pereira was the first Indian to be appointed Bishop of Trivandrum and the Diocese passed into the hands of the indigenous Clergy. The Liturgical and Catechetical renewal initiated by Bishop Bernard Pereira after the II Vatican Council marks the beginning of renewal in the Diocese. St.Xavier's College, Thumba, All Saint's College and various other pioneering contributions of Bp. Pereira made a strong footing for the growth of the Diocese of Trivandrum. Our former President of India, Sri. Abdul Kalam always remember the contribution of Bp.Pereira in establishing VSSC (Vikram Sarabhai Space Center) in Trivandrum to the extent that a parish community with the parish church was ready to sacrifice for the pride of the Nation. The Diocese is bounded on the north by the Diocese of Quilon, on the east by the Ghats, on the west by the Arabian Sea and on the south by the Diocese of Kottar. As much as 90 percent of the faithful in our Diocese of Trivandrum hails from the community of fisher folk. This community as a whole is impoverished and is classified by the Government itself as one of the backward communities. In social stratification, fishermen find their place at the lowest rank of the ladder of social setup. These people may be poor in material resources. But they are rich in faith. 450 years ago, St. Francis Xavier was walking along this sea-coast preaching the Gospel. In one of his letters addressed to St. Ignatious, St. Francis Xavier writes about this people as follows: This region is utterly barren and poverty - stricken. Since I came here, I have had no rest. I have been going from village to village. The children would not let me stay at my office or eat or rest till I had taught them some prayer. It was then that I really began to feel that such is the kingdom of heaven. I started to teach them catechism and I saw immediately that they were very intelligent. This is what St. Francis expressed 450 years go.The turning point in the history of the Diocese was its Golden Jubilee year in 1987, when after a long and mature deliberation a renewal movement was initiated by Bishop Jacob Acharuparambil. From that time onwards, the Diocese has aimed at developing a new vision drawing inspiration from the Vatican II Council Documents Lumen Gentium and steadily moves forward holding aloft the biblical vision of the Church as the People of God. The telling example to this fact is the 1512 Basic Christian Communities. In these units, more and more lay people come forward to share responsibilities. A conscious effort is made to read the Bible, to understand its message and to put it into practice in day to day life. Liturgy is celebrated meaningfully. Devotion to our Blessed Mother is spread out through praying the Rosary. Social evils are fought and several charitable activities are carried out. The problems existing between the families are discussed and solved. A smooth relationship among the parishners are created. A serious and sincere effort is now going on in the Diocese to bring about a radical change in the life style of our people with the intention of transforming them to a witnessing community of love that radiates the joy and peace of Christ. Today we are committed to its mission of transforming the whole Diocese of Trivandrum into a People of God under the able leadership of Bishop Soosa Pakiam. This is a mission of empowering the faithful to a deeper church, commitment to uphold human dignity and Christian values, a mission of attaining deliverance from oppressive structures and unjust systems; a mission of bringing about better understanding and communion in the Church and in the society; and above all a mission of ushering in the Kingdom of God. As a result of this, we pray and look forward for the emergence of a new heaven and a new earth, for that day when a new awareness emerges based on the eternal values, justice and peace, freedom and equality, love and happiness. On 17th June 2004, Holy Father Pope John Paul II has elevated the Diocese of Trivandrum into an Archdiocese and its Bishop Soosa Pakiam M. as its first Archbishop.\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/oldchurch.jpg\"\n    },\n    {\n        id: 5,\n        title: \"Bible\",\n        category: \"History\",\n        subCategory: [\n            \"bbq\",\n            \"food\",\n            \"lifestyle\"\n        ],\n        description: \"The Bible commission aims at making Bible an integral part of everyday life of faithful. And the commission enables the faithful to explore the meaning of the Word of God in the cultural context of Asia in general and India in particular. Commission for Christian Faith Formation (Catechism) Catechism of the Catholic Church teaches, “Catechism aims at presenting an organic synthesis of the essential and fundamental contents of Catholic doctrine, as regards both faith and morals, in the light of the Second Vatican Council and the whole of the Church's Tradition. Commission for Liturgy The implications that have been shaped through Bible reading and interpretation, and the significance of doctrines that have been taught at the Catechism class are transformed into practical realization and celebration in everyday life. Family Apostolate The family apostolate commission aims to model the families both as a symbol of the Trinitarian love, care and concern and as an instrument where the kingdom of God becomes a lived experience. Commission for Evangelization The only mission of the Church remains evangelization. This sole mission of the Church is realizes in two ways: first, Church actualizes the Gospel in herself and second, Church witness the Gospel to the world. Commission for Pious Association Different levels of charism are nourished and enchanted for the spiritual growth of the faithful through the different pious associations. Each association is trained to work to realize the vision of the Archdiocese. Commission for Ecumenism and Dialogue The active presence of multi-religions and multi-churches in India, particularly in Kerala, makes obvious the need for a Commission for Ecumenism and Dialogue. The commission aims to contribute dynamically to maintain religious harmony and inter-church relationship by convening periodical meetings with the different religious.\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/images/author.jpg\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/bible.jpg\"\n    },\n    {\n        id: 6,\n        title: \"Patron Saint\",\n        category: \"History\",\n        subCategory: [\n            \"History\",\n            \"StJoseph\",\n            \"Patron Saint\"\n        ],\n        description: \"Everything we know about the husband of Mary and the foster father of Jesus comes from Scripture and that has seemed too little for those who made up legends about him. We know he was a carpenter, a working man, for the skeptical Nazarenes ask about Jesus, Is this not the carpenter's son? (Matthew 13:55). He wasn't rich for when he took Jesus to the Temple to be circumcised and Mary to be purified he offered the sacrifice of two turtledoves or a pair of pigeons, allowed only for those who could not afford a lamb (Luke 2:24). Despite his humble work and means, Joseph came from a royal lineage. Luke and Matthew disagree some about the details of Joseph's genealogy but they both mark his descent from David, the greatest king of Israel (Matthew 1:1-16 and Luke 3:23-38). Indeed the angel who first tells Joseph about Jesus greets him as son of David, a royal title used also for Jesus. We know Joseph was a compassionate, caring man. When he discovered Mary was pregnant after they had been betrothed, he knew the child was not his but was as yet unaware that she was carrying the Son of God. He planned to divorce Mary according to the law but he was concerned for her suffering and safety. He knew that women accused to adultery could be stoned to death, so he decided to divorce her quietly and not expose her to shame or cruelty (Matthew 1:19-25). We know Joseph was man of faith, obedient to whatever Godasked of him without knowing the outcome. When the angelcame to Joseph in a dream and told him the truth about the child Mary was carrying, Joseph immediately and without question or concern for gossip, took Mary as his wife. When the angel came again to tell him that his family was in danger, he immediately left everything he owned, all his family and friends, and fled to a strange country with his young wife and the baby. He waited in Egypt without question until the angel told him it was safe to go back (Matthew 2:13- 23). We know Joseph loved Jesus. His one concern was for the safety of this child entrusted to him. Not only did he leave his home to protect Jesus, but upon his return settled in the obscure town of Nazareth out of fear for his life. When Jesus stayed in the Temple we are told Joseph (along with Mary) searched with great anxiety for three days for him (Luke 2:48). We also know that Joseph treated Jesus as his own son for over and over the people of Nazareth say of Jesus, Is this not the son of Joseph? (Luke 4:22) We know Joseph respected God. He followed God's commands in handling the situation with Mary and going to Jerusalem to have Jesus circumcised and Mary purified after Jesus' birth. We are told that he took his family to Jerusalem every year for Passover, something that could not have been easy for a working man. Since Joseph does not appear in Jesus' public life, at his death, or resurrection, many historians believeJoseph probably had died before Jesus entered public ministry. Joseph is the patron of the dying because, assuming he died before Jesus' public life, he died with Jesusand Mary close to him, the way we all would like to leave this earth. Joseph is also patron of the universal Church, fathers, carpenters, and social justice. We celebrate two feast days for Joseph: March 19 for Joseph the Husband of Mary and May 1 for Joseph the Worker. There is much we wish we could know about Joseph -- where and when he was born, how he spent his days, when and how he died. But Scripture has left us with the most important knowledge: who he was -- a righteous man (Matthew 1:18). In His Footsteps: Joseph was foster father to Jesus. There are many children separated from families and parents who need foster parents. Please consider contacting your local Catholic Charities or Division of FamilyServices about becoming a foster parent. Saint Joseph, patron of the universal Church, watch over the Church as carefully as you watched over Jesus, help protect it and guide it as you did with your adopted son. Amen Prayer to St. Joseph Oh, St. Joseph, whose protection is so great, so strong, so prompt before the throne of God. I place in you all my interests and desires. Oh, St. Joseph, do assist me by your powerful intercession, and obtain for me from your divine Son all spiritual blessings, through Jesus Christ, our Lord. So that, having engaged here below your heavenly power, I may offer my thanksgiving and homage to the most loving of Fathers. Oh, St. Joseph, I never weary of contemplating you, and Jesus asleep in your arms; I dare not approach while He reposes near your heart. Press Him in my name and kiss His fine head for me and ask him to return the Kiss when I draw my dying breath. St. Joseph, Patron of departing souls - Pray for me. This prayer was found in the fiftienth year of Our Lord and Savior Jesus Christ. In 1505 it was sent from the Pope to Emperor Charles when he was going into battle. Whoever shall read this prayer or hear it or keep it about themselves, shall never die a sudden death, or be drowned, not shall posion take effect of them; neither shall they fall into the hands of the enemy; or shall be burned in any fire, or shall be overpowered in battle. Say for nine mornings for anything you may desire. It has never been known to fail, so be sure you really want what you ask .\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/images/author.jpg\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/st joseph.jpg\"\n    },\n    {\n        id: 7,\n        title: \"Youth-Development\",\n        category: \"Youth-Development\",\n        subCategory: [\n            \"Service\",\n            \"Youth\",\n            \"Education\"\n        ],\n        description: \"The Education Ministry of the St Joseph’s Metropolitan Cathedral is an integral part of the Archdiocesan activities. Like any other ministry and its activities it is to help people, especially the younger ones to realize the Kingdom here on earth. While striving for academic excellence, the ministry places special thrust on creating among the students values expected of the Kingdom and instilling a deep sense of commitment to it. The Kingdom here on earth is understood as a society led by love, the other oriented, as against the one by self-centered concerns like positions and possessions etc. It also expects us to inculcate in them a strong sense of liberty, equality and fraternity among other humane values including the ones to protect the universe for the future generations too. Education as we aim at must break the ‘culture of silence’ and enable people to build a society where people are not mere objects and passive pawns in the hands of the big and powerful, but active agents of their progress and participants and partners in building their own destiny. The ministry of education, therefore, commits itself to use the various informational, psychological and spiritual means available to build up the students as future torch bearers for a better and more humane society. As the realization of the Kingdom is not the exclusive prerogative of anyone, all need to be enlisted. The Church declaring itself as an agency that defines its identity in the commitment to bring the Good News to the poor, our educational institutions will naturally reflect that. Neither is the task of realizing the Kingdom limited to our institutions alone. Hence we need to involve all concerned through dialogues, discussions, seminars, motivational and awareness programmes for students, staff, parents etc. Our responsibility certainly extends far and wide beyond the boundaries of our institutions. We need to take into account the context in which we work, that is the Kerala situation and the developments that take place almost every day. The state has no option to be an on looker alone on the sidelines alone. In a situation of cent percent literacy, we as a people are hardly 70% literate! Like Minded people are more than welcome to free this people which according to Jesus ‘truth alone’ will bring. St Joseph LP school is a part of Palayam parish. Functions of the Education Ministry: 1. The Board of Education primarily aims at offering necessary guidance to the educational ministry at various levels. 2. The Board functions as a resource center to advice on all possible educational fields, i.e., literacy, primary, secondary, collegiate, professional and technical. 3. The Board encourages professional planning among those involved in the promotion of the education..\",\n        authorName: \"Secretary\",\n        authorAvatar: \"/assets/images/author.jpg\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/image9.jpeg\"\n    },\n    {\n        id: 8,\n        title: \"Sparsham\",\n        category: \"Youth-Development\",\n        subCategory: [\n            \"skill\",\n            \"design\",\n            \"passion\"\n        ],\n        description: \"St. Joseph’s Metropolitan Cathedral Parish is venturing to take up a few welfare schemes to ensure the security of the poor and welfare of the needy. These welfare schemes are labeled under the package THE TOUCH (SPARSHAM). Thus our mission aims at a ‘Step by step’ approach to bring equality, well being, wisdom and enlightenment for all.  TOUCH OF SHELTER  TOUCH OF LIGHT  TOUCH OF ONENESS  TOUCH OF CARE  TOUCH OF LIFE  TOUCH OF CLEANLINESS  TOUCH OF GUIDANCE  TOUCH OF COUNSELING The Touch unfolds the following programmes. TOUCH OF SHELTER: There are families who do not have enough space to lie down and sleep and a few of them stand in corners during rainy nights. To these people who have land but are so poor to build a house themselves, we intend to extend our sheltering hands to them. TOUCH OF LIGHT:Education dispels darkness. Students financially backward but promising and desirous of going for higher studies are provided with the necessary guidance and financial support. TOUCH OF ONENESS: A marriage fund is instituted for giving support to deserving girls for their bright and prosperous future. TOUCH OF CARE: Regional Cancer Center has introduced a welfare scheme by name – Cancer Care for Life. Our assistance in this scheme is to pay the membership fee for enrolment into the policy for the poor who are eligible for this benefit. This scheme also aims at meeting the exorbitant medical expenses related to Kidney/Heart diseases. TOUCH OF LIFE: Kerala Catholic Youth Movement (KCYM) of the Cathedral draws the attention of the people by forming a Blood Donors Forum for the purpose of donating blood to “SAVE LIFE”. TOUCH OF CLEANLINESS: Accumulation of waste and its resultant effects not only vitiates urban and rural areas but also afferent to our God. Hence we join hands with JMS Biotech to manage our waste at the source level itself in a scientific manner converting them into organic manure, thereby facilitating organic farming. TOUCH OF GUIDANCE: Gives information and guidance about all Government/ Semi Government Programmes to the needy goad them to make better use of these facilities. TOUCH OF COUNSELING: To lend a patient ear to alleviate the grieved and tensed. TOUCH OF FELLOWSHIP: We intend to adopt a mission parish to deepen their faith and to bring them into the mainstream of life.\",\n        authorName: \"John Doe\",\n        authorAvatar: \"/images/author.jpg\",\n        createdAt: \"June 03, 2021\",\n        cover: \"/image14.jpg\"\n    },\n    {\n        id: 9,\n        title: \"തിരുവനന്തപുരം നഗരമധ്യത്തിൽ  കാഴ്ചയുടെ വിസ്മയമായി മാറിയ പാളയം പള്ളി.\",\n        category: \"History\",\n        subCategory: [\n            \"Updates\",\n            \"News\",\n            \"St Joseph \"\n        ],\n        description: \"When St Joseph Cathedral became the centre of attraction in Trivandrum city\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"March 15, 2022\",\n        cover: \"/update6.jpg\"\n    },\n    {\n        id: 10,\n        title: \"വത്തിക്കാൻ സ്ഥാനപതി ഇടവക കൗൺസിൽ ചേർന്ന് സ്വീകരിക്കുന്നു\",\n        category: \"Updates\",\n        subCategory: [\n            \"Updates\",\n            \"News\",\n            \"St Joseph \"\n        ],\n        description: \"വത്തിക്കാൻ സ്ഥാനപതി ഇന്ത്യൻ അപ്പോസ്തലിക് ന്യൂൺ ഷോ ലിയോപോൾഡേ ജിറേലിയെയും സഹായമെത്രാൻ ക്രിസ്തുദാസ്. ആർ നയും പാളയം ഇടവക വികാരി  റവ. മോൺ. നിക്കോളാസ്. റ്റി യും ഇടവക കൗൺസിൽ ചേർന്ന് സ്വീകരിക്കുന്നു\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"March 19, 2022\",\n        cover: \"/update4.jpg\"\n    },\n    {\n        id: 11,\n        title: \"ദിവ്യബലിക്ക് നേതൃത്വം നൽകി നൂൺഷ്യോ\",\n        category: \"Updates\",\n        subCategory: [\n            \"Updates\",\n            \"News\",\n            \"St Joseph \"\n        ],\n        description: \"വിശുദ്ധ യൗസേപ്പ് പിതാവിൻ്റെ തിരു നാളുമായി ബന്ധപ്പെട്ട ഇന്ന്  രാവിലെ 7 മണിക്ക് ആഘോഷമായ സമൂഹ ദിവ്യബലി നടന്നു  ദിവ്യബലിക്ക് നേതൃത്വം നൽകി നൂൺഷ്യോയും(His Excellency  ലിയോപോൾഡോ ജിറേലിയേ who serves as the Apostolic Nuncio to India and to Nepal)കൊച്ചു പിതാവ് (His Excellency ക്രിസ്തുദാസ് രാജപ്പൻ).\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"March 19, 2022\",\n        cover: \"/update3.jpg\"\n    },\n    {\n        id: 12,\n        title: \"മെത്രാപ്പൊലീത്ത ഡോ. തോമസ് ജെ. നെറ്റോയുടെ മെത്രാഭിഷേകവും സ്ഥാനാരോഹണവും\",\n        category: \"Updates\",\n        subCategory: [\n            \"Updates\",\n            \"News\",\n            \"St Joseph \"\n        ],\n        description: \"തിരുവനന്തപുരം ലത്തീൻ അതിരൂപതയുടെ മെത്രാപ്പൊലീത്ത ഡോ. തോമസ് ജെ. നെറ്റോയുടെ മെത്രാഭിഷേകവും സ്ഥാനാരോഹണവും.\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"March 20, 2022\",\n        cover: \"/update2.jpg\"\n    },\n    {\n        id: 13,\n        title: \"റവ. ഡോ. തോമസ് ജെ. നെറ്റോ തിരുവനന്തപുരം രൂപത അധ്യക്ഷനായി ദിവ്യബലി\",\n        category: \"Updates\",\n        subCategory: [\n            \"Updates\",\n            \"News\",\n            \"St Joseph \"\n        ],\n        description: \"മോസ്റ്റ്. റവ. ഡോ. തോമസ് ജെ. നെറ്റോ തിരുവനന്തപുരം രൂപത അധ്യക്ഷനായി ദിവ്യബലി അർപ്പിച്ചപ്പോൾ.\",\n        authorName: \"Parish Priest\",\n        authorAvatar: \"/DSC01943.JPG\",\n        createdAt: \"March 20, 2022\",\n        cover: \"/update1.jpg\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./config/data.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/image.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/client/image.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\"use client\";\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nObject.defineProperty(exports, \"ImageLoaderProps\", ({\n    enumerable: true,\n    get: function() {\n        return _imageConfig.ImageLoaderProps;\n    }\n}));\nexports[\"default\"] = Image;\nvar _extends = (__webpack_require__(/*! @swc/helpers/lib/_extends.js */ \"./node_modules/@swc/helpers/lib/_extends.js\")[\"default\"]);\nvar _interop_require_default = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_default.js */ \"./node_modules/@swc/helpers/lib/_interop_require_default.js\")[\"default\"]);\nvar _interop_require_wildcard = (__webpack_require__(/*! @swc/helpers/lib/_interop_require_wildcard.js */ \"./node_modules/@swc/helpers/lib/_interop_require_wildcard.js\")[\"default\"]);\nvar _object_without_properties_loose = (__webpack_require__(/*! @swc/helpers/lib/_object_without_properties_loose.js */ \"./node_modules/@swc/helpers/lib/_object_without_properties_loose.js\")[\"default\"]);\nvar _react = _interop_require_wildcard(__webpack_require__(/*! react */ \"react\"));\nvar _head = _interop_require_default(__webpack_require__(/*! ../shared/lib/head */ \"../shared/lib/head\"));\nvar _imageBlurSvg = __webpack_require__(/*! ../shared/lib/image-blur-svg */ \"../shared/lib/image-blur-svg\");\nvar _imageConfig = __webpack_require__(/*! ../shared/lib/image-config */ \"../shared/lib/image-config\");\nvar _imageConfigContext = __webpack_require__(/*! ../shared/lib/image-config-context */ \"../shared/lib/image-config-context\");\nvar _utils = __webpack_require__(/*! ../shared/lib/utils */ \"../shared/lib/utils\");\nvar _imageLoader = _interop_require_default(__webpack_require__(/*! next/dist/shared/lib/image-loader */ \"next/dist/shared/lib/image-loader\"));\nfunction Image(_param) {\n    var { src , sizes , unoptimized =false , priority =false , loading , className , quality , width , height , fill , style , onLoad , onLoadingComplete , placeholder =\"empty\" , blurDataURL  } = _param, all = _object_without_properties_loose(_param, [\n        \"src\",\n        \"sizes\",\n        \"unoptimized\",\n        \"priority\",\n        \"loading\",\n        \"className\",\n        \"quality\",\n        \"width\",\n        \"height\",\n        \"fill\",\n        \"style\",\n        \"onLoad\",\n        \"onLoadingComplete\",\n        \"placeholder\",\n        \"blurDataURL\"\n    ]);\n    const configContext = (0, _react).useContext(_imageConfigContext.ImageConfigContext);\n    const config = (0, _react).useMemo(()=>{\n        const c = configEnv || configContext || _imageConfig.imageConfigDefault;\n        const allSizes = [\n            ...c.deviceSizes,\n            ...c.imageSizes\n        ].sort((a, b)=>a - b);\n        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);\n        return _extends({}, c, {\n            allSizes,\n            deviceSizes\n        });\n    }, [\n        configContext\n    ]);\n    let rest = all;\n    let loader = rest.loader || _imageLoader.default;\n    // Remove property so it's not spread on <img> element\n    delete rest.loader;\n    if (\"__next_img_default\" in loader) {\n        // This special value indicates that the user\n        // didn't define a \"loader\" prop or config.\n        if (config.loader === \"custom\") {\n            throw new Error(`Image with src \"${src}\" is missing \"loader\" prop.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader`);\n        }\n    } else {\n        // The user defined a \"loader\" prop or config.\n        // Since the config object is internal only, we\n        // must not pass it to the user-defined \"loader\".\n        const customImageLoader = loader;\n        var _tmp;\n        _tmp = (obj)=>{\n            const { config: _  } = obj, opts = _object_without_properties_loose(obj, [\n                \"config\"\n            ]);\n            return customImageLoader(opts);\n        }, loader = _tmp, _tmp;\n    }\n    let staticSrc = \"\";\n    let widthInt = getInt(width);\n    let heightInt = getInt(height);\n    let blurWidth;\n    let blurHeight;\n    if (isStaticImport(src)) {\n        const staticImageData = isStaticRequire(src) ? src.default : src;\n        if (!staticImageData.src) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received ${JSON.stringify(staticImageData)}`);\n        }\n        if (!staticImageData.height || !staticImageData.width) {\n            throw new Error(`An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received ${JSON.stringify(staticImageData)}`);\n        }\n        blurWidth = staticImageData.blurWidth;\n        blurHeight = staticImageData.blurHeight;\n        blurDataURL = blurDataURL || staticImageData.blurDataURL;\n        staticSrc = staticImageData.src;\n        if (!fill) {\n            if (!widthInt && !heightInt) {\n                widthInt = staticImageData.width;\n                heightInt = staticImageData.height;\n            } else if (widthInt && !heightInt) {\n                const ratio = widthInt / staticImageData.width;\n                heightInt = Math.round(staticImageData.height * ratio);\n            } else if (!widthInt && heightInt) {\n                const ratio1 = heightInt / staticImageData.height;\n                widthInt = Math.round(staticImageData.width * ratio1);\n            }\n        }\n    }\n    src = typeof src === \"string\" ? src : staticSrc;\n    let isLazy = !priority && (loading === \"lazy\" || typeof loading === \"undefined\");\n    if (src.startsWith(\"data:\") || src.startsWith(\"blob:\")) {\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n        unoptimized = true;\n        isLazy = false;\n    }\n    if (config.unoptimized) {\n        unoptimized = true;\n    }\n    const [blurComplete, setBlurComplete] = (0, _react).useState(false);\n    const [showAltText, setShowAltText] = (0, _react).useState(false);\n    const qualityInt = getInt(quality);\n    if (true) {\n        if (!src) {\n            // React doesn't show the stack trace and there's\n            // no `src` to help identify which image, so we\n            // instead console.error(ref) during mount.\n            unoptimized = true;\n        } else {\n            if (fill) {\n                if (width) {\n                    throw new Error(`Image with src \"${src}\" has both \"width\" and \"fill\" properties. Only one should be used.`);\n                }\n                if (height) {\n                    throw new Error(`Image with src \"${src}\" has both \"height\" and \"fill\" properties. Only one should be used.`);\n                }\n                if ((style == null ? void 0 : style.position) && style.position !== \"absolute\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.position\" properties. Images with \"fill\" always use position absolute - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.width) && style.width !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.width\" properties. Images with \"fill\" always use width 100% - it cannot be modified.`);\n                }\n                if ((style == null ? void 0 : style.height) && style.height !== \"100%\") {\n                    throw new Error(`Image with src \"${src}\" has both \"fill\" and \"style.height\" properties. Images with \"fill\" always use height 100% - it cannot be modified.`);\n                }\n            } else {\n                if (typeof widthInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"width\" property.`);\n                } else if (isNaN(widthInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"width\" property. Expected a numeric value in pixels but received \"${width}\".`);\n                }\n                if (typeof heightInt === \"undefined\") {\n                    throw new Error(`Image with src \"${src}\" is missing required \"height\" property.`);\n                } else if (isNaN(heightInt)) {\n                    throw new Error(`Image with src \"${src}\" has invalid \"height\" property. Expected a numeric value in pixels but received \"${height}\".`);\n                }\n            }\n        }\n        if (!VALID_LOADING_VALUES.includes(loading)) {\n            throw new Error(`Image with src \"${src}\" has invalid \"loading\" property. Provided \"${loading}\" should be one of ${VALID_LOADING_VALUES.map(String).join(\",\")}.`);\n        }\n        if (priority && loading === \"lazy\") {\n            throw new Error(`Image with src \"${src}\" has both \"priority\" and \"loading='lazy'\" properties. Only one should be used.`);\n        }\n        if (placeholder === \"blur\") {\n            if (widthInt && heightInt && widthInt * heightInt < 1600) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" is smaller than 40x40. Consider removing the \"placeholder='blur'\" property to improve performance.`);\n            }\n            if (!blurDataURL) {\n                const VALID_BLUR_EXT = [\n                    \"jpeg\",\n                    \"png\",\n                    \"webp\",\n                    \"avif\"\n                ] // should match next-image-loader\n                ;\n                throw new Error(`Image with src \"${src}\" has \"placeholder='blur'\" property but is missing the \"blurDataURL\" property.\n          Possible solutions:\n            - Add a \"blurDataURL\" property, the contents should be a small Data URL to represent the image\n            - Change the \"src\" property to a static import with one of the supported file types: ${VALID_BLUR_EXT.join(\",\")}\n            - Remove the \"placeholder\" property, effectively no blur effect\n          Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url`);\n            }\n        }\n        if (\"ref\" in rest) {\n            (0, _utils).warnOnce(`Image with src \"${src}\" is using unsupported \"ref\" property. Consider using the \"onLoadingComplete\" property instead.`);\n        }\n        if (!unoptimized && loader !== _imageLoader.default) {\n            const urlStr = loader({\n                config,\n                src,\n                width: widthInt || 400,\n                quality: qualityInt || 75\n            });\n            let url;\n            try {\n                url = new URL(urlStr);\n            } catch (err) {}\n            if (urlStr === src || url && url.pathname === src && !url.search) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" has a \"loader\" property that does not implement width. Please implement it or use the \"unoptimized\" property instead.` + `\\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width`);\n            }\n        }\n        if (false) {}\n    }\n    const imgStyle = Object.assign(fill ? {\n        position: \"absolute\",\n        height: \"100%\",\n        width: \"100%\",\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n    } : {}, showAltText ? {} : {\n        color: \"transparent\"\n    }, style);\n    const blurStyle = placeholder === \"blur\" && blurDataURL && !blurComplete ? {\n        backgroundSize: imgStyle.objectFit || \"cover\",\n        backgroundPosition: imgStyle.objectPosition || \"50% 50%\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundImage: `url(\"data:image/svg+xml;charset=utf-8,${(0, _imageBlurSvg).getImageBlurSvg({\n            widthInt,\n            heightInt,\n            blurWidth,\n            blurHeight,\n            blurDataURL\n        })}\")`\n    } : {};\n    if (true) {\n        if (blurStyle.backgroundImage && (blurDataURL == null ? void 0 : blurDataURL.startsWith(\"/\"))) {\n            // During `next dev`, we don't want to generate blur placeholders with webpack\n            // because it can delay starting the dev server. Instead, `next-image-loader.js`\n            // will inline a special url to lazily generate the blur placeholder at request time.\n            blurStyle.backgroundImage = `url(\"${blurDataURL}\")`;\n        }\n    }\n    const imgAttributes = generateImgAttrs({\n        config,\n        src,\n        unoptimized,\n        width: widthInt,\n        quality: qualityInt,\n        sizes,\n        loader\n    });\n    let srcString = src;\n    if (true) {\n        if (false) {}\n    }\n    let imageSrcSetPropName = \"imagesrcset\";\n    let imageSizesPropName = \"imagesizes\";\n    if (true) {\n        imageSrcSetPropName = \"imageSrcSet\";\n        imageSizesPropName = \"imageSizes\";\n    }\n    const linkProps = {\n        // Note: imagesrcset and imagesizes are not in the link element type with react 17.\n        [imageSrcSetPropName]: imgAttributes.srcSet,\n        [imageSizesPropName]: imgAttributes.sizes,\n        crossOrigin: rest.crossOrigin\n    };\n    const onLoadRef = (0, _react).useRef(onLoad);\n    (0, _react).useEffect(()=>{\n        onLoadRef.current = onLoad;\n    }, [\n        onLoad\n    ]);\n    const onLoadingCompleteRef = (0, _react).useRef(onLoadingComplete);\n    (0, _react).useEffect(()=>{\n        onLoadingCompleteRef.current = onLoadingComplete;\n    }, [\n        onLoadingComplete\n    ]);\n    const imgElementArgs = _extends({\n        isLazy,\n        imgAttributes,\n        heightInt,\n        widthInt,\n        qualityInt,\n        className,\n        imgStyle,\n        blurStyle,\n        loading,\n        config,\n        fill,\n        unoptimized,\n        placeholder,\n        loader,\n        srcString,\n        onLoadRef,\n        onLoadingCompleteRef,\n        setBlurComplete,\n        setShowAltText\n    }, rest);\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(ImageElement, Object.assign({}, imgElementArgs)), priority ? // for browsers that do not support `imagesrcset`, and in those cases\n    // it would likely cause the incorrect image to be preloaded.\n    //\n    // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset\n    /*#__PURE__*/ _react.default.createElement(_head.default, null, /*#__PURE__*/ _react.default.createElement(\"link\", Object.assign({\n        key: \"__nimg-\" + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes,\n        rel: \"preload\",\n        as: \"image\",\n        href: imgAttributes.srcSet ? undefined : imgAttributes.src\n    }, linkProps))) : null);\n}\n\"use client\";\nconst configEnv = {\"deviceSizes\":[640,750,828,1080,1200,1920,2048,3840],\"imageSizes\":[16,32,48,64,96,128,256,384],\"path\":\"/_next/image\",\"loader\":\"default\",\"dangerouslyAllowSVG\":false,\"unoptimized\":false,\"domains\":[],\"remotePatterns\":[]};\nconst allImgs = new Map();\nlet perfObserver;\nif (true) {\n    global.__NEXT_IMAGE_IMPORTED = true;\n}\nconst VALID_LOADING_VALUES = [\n    \"lazy\",\n    \"eager\",\n    undefined\n];\nfunction isStaticRequire(src) {\n    return src.default !== undefined;\n}\nfunction isStaticImageData(src) {\n    return src.src !== undefined;\n}\nfunction isStaticImport(src) {\n    return typeof src === \"object\" && (isStaticRequire(src) || isStaticImageData(src));\n}\nfunction getWidths({ deviceSizes , allSizes  }, width, sizes) {\n    if (sizes) {\n        // Find all the \"vw\" percent sizes used in the sizes prop\n        const viewportWidthRe = /(^|\\s)(1?\\d?\\d)vw/g;\n        const percentSizes = [];\n        for(let match; match = viewportWidthRe.exec(sizes); match){\n            percentSizes.push(parseInt(match[2]));\n        }\n        if (percentSizes.length) {\n            const smallestRatio = Math.min(...percentSizes) * 0.01;\n            return {\n                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),\n                kind: \"w\"\n            };\n        }\n        return {\n            widths: allSizes,\n            kind: \"w\"\n        };\n    }\n    if (typeof width !== \"number\") {\n        return {\n            widths: deviceSizes,\n            kind: \"w\"\n        };\n    }\n    const widths = [\n        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and\n        // > blue colors. Showing a 3x resolution image in the app vs a 2x\n        // > resolution image will be visually the same, though the 3x image\n        // > takes significantly more data. Even true 3x resolution screens are\n        // > wasteful as the human eye cannot see that level of detail without\n        // > something like a magnifying glass.\n        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html\n        [\n            width,\n            width * 2 /*, width * 3*/ \n        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))\n    ];\n    return {\n        widths,\n        kind: \"x\"\n    };\n}\nfunction generateImgAttrs({ config , src , unoptimized , width , quality , sizes , loader  }) {\n    if (unoptimized) {\n        return {\n            src,\n            srcSet: undefined,\n            sizes: undefined\n        };\n    }\n    const { widths , kind  } = getWidths(config, width, sizes);\n    const last = widths.length - 1;\n    return {\n        sizes: !sizes && kind === \"w\" ? \"100vw\" : sizes,\n        srcSet: widths.map((w, i)=>`${loader({\n                config,\n                src,\n                quality,\n                width: w\n            })} ${kind === \"w\" ? w : i + 1}${kind}`).join(\", \"),\n        // It's intended to keep `src` the last attribute because React updates\n        // attributes in order. If we keep `src` the first one, Safari will\n        // immediately start to fetch `src`, before `sizes` and `srcSet` are even\n        // updated by React. That causes multiple unnecessary requests if `srcSet`\n        // and `sizes` are defined.\n        // This bug cannot be reproduced in Chrome or Firefox.\n        src: loader({\n            config,\n            src,\n            quality,\n            width: widths[last]\n        })\n    };\n}\nfunction getInt(x) {\n    if (typeof x === \"number\" || typeof x === \"undefined\") {\n        return x;\n    }\n    if (typeof x === \"string\" && /^[0-9]+$/.test(x)) {\n        return parseInt(x, 10);\n    }\n    return NaN;\n}\n// See https://stackoverflow.com/q/39777833/266535 for why we use this ref\n// handler instead of the img's onLoad attribute.\nfunction handleLoading(img, src, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete) {\n    if (!img || img[\"data-loaded-src\"] === src) {\n        return;\n    }\n    img[\"data-loaded-src\"] = src;\n    const p = \"decode\" in img ? img.decode() : Promise.resolve();\n    p.catch(()=>{}).then(()=>{\n        if (!img.parentNode) {\n            // Exit early in case of race condition:\n            // - onload() is called\n            // - decode() is called but incomplete\n            // - unmount is called\n            // - decode() completes\n            return;\n        }\n        if (placeholder === \"blur\") {\n            setBlurComplete(true);\n        }\n        if (onLoadRef == null ? void 0 : onLoadRef.current) {\n            // Since we don't have the SyntheticEvent here,\n            // we must create one with the same shape.\n            // See https://reactjs.org/docs/events.html\n            const event = new Event(\"load\");\n            Object.defineProperty(event, \"target\", {\n                writable: false,\n                value: img\n            });\n            let prevented = false;\n            let stopped = false;\n            onLoadRef.current(_extends({}, event, {\n                nativeEvent: event,\n                currentTarget: img,\n                target: img,\n                isDefaultPrevented: ()=>prevented,\n                isPropagationStopped: ()=>stopped,\n                persist: ()=>{},\n                preventDefault: ()=>{\n                    prevented = true;\n                    event.preventDefault();\n                },\n                stopPropagation: ()=>{\n                    stopped = true;\n                    event.stopPropagation();\n                }\n            }));\n        }\n        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {\n            onLoadingCompleteRef.current(img);\n        }\n        if (true) {\n            if (img.getAttribute(\"data-nimg\") === \"fill\") {\n                if (!img.getAttribute(\"sizes\") || img.getAttribute(\"sizes\") === \"100vw\") {\n                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;\n                    if (widthViewportRatio < 0.6) {\n                        (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" but is missing \"sizes\" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes`);\n                    }\n                }\n                if (img.parentElement) {\n                    const { position  } = window.getComputedStyle(img.parentElement);\n                    const valid = [\n                        \"absolute\",\n                        \"fixed\",\n                        \"relative\"\n                    ];\n                    if (!valid.includes(position)) {\n                        (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and parent element with invalid \"position\". Provided \"${position}\" should be one of ${valid.map(String).join(\",\")}.`);\n                    }\n                }\n                if (img.height === 0) {\n                    (0, _utils).warnOnce(`Image with src \"${src}\" has \"fill\" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.`);\n                }\n            }\n            const heightModified = img.height.toString() !== img.getAttribute(\"height\");\n            const widthModified = img.width.toString() !== img.getAttribute(\"width\");\n            if (heightModified && !widthModified || !heightModified && widthModified) {\n                (0, _utils).warnOnce(`Image with src \"${src}\" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles 'width: \"auto\"' or 'height: \"auto\"' to maintain the aspect ratio.`);\n            }\n        }\n    });\n}\nconst ImageElement = (_param)=>{\n    var { imgAttributes , heightInt , widthInt , qualityInt , className , imgStyle , blurStyle , isLazy , fill , placeholder , loading , srcString , config , unoptimized , loader , onLoadRef , onLoadingCompleteRef , setBlurComplete , setShowAltText , onLoad , onError  } = _param, rest = _object_without_properties_loose(_param, [\n        \"imgAttributes\",\n        \"heightInt\",\n        \"widthInt\",\n        \"qualityInt\",\n        \"className\",\n        \"imgStyle\",\n        \"blurStyle\",\n        \"isLazy\",\n        \"fill\",\n        \"placeholder\",\n        \"loading\",\n        \"srcString\",\n        \"config\",\n        \"unoptimized\",\n        \"loader\",\n        \"onLoadRef\",\n        \"onLoadingCompleteRef\",\n        \"setBlurComplete\",\n        \"setShowAltText\",\n        \"onLoad\",\n        \"onError\"\n    ]);\n    loading = isLazy ? \"lazy\" : loading;\n    return /*#__PURE__*/ _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/ _react.default.createElement(\"img\", Object.assign({}, rest, imgAttributes, {\n        width: widthInt,\n        height: heightInt,\n        decoding: \"async\",\n        \"data-nimg\": fill ? \"fill\" : \"1\",\n        className: className,\n        // @ts-ignore - TODO: upgrade to `@types/react@17`\n        loading: loading,\n        style: _extends({}, imgStyle, blurStyle),\n        ref: (0, _react).useCallback((img)=>{\n            if (!img) {\n                return;\n            }\n            if (onError) {\n                // If the image has an error before react hydrates, then the error is lost.\n                // The workaround is to wait until the image is mounted which is after hydration,\n                // then we set the src again to trigger the error handler (if there was an error).\n                // eslint-disable-next-line no-self-assign\n                img.src = img.src;\n            }\n            if (true) {\n                if (!srcString) {\n                    console.error(`Image is missing required \"src\" property:`, img);\n                }\n                if (img.getAttribute(\"objectFit\") || img.getAttribute(\"objectfit\")) {\n                    console.error(`Image has unknown prop \"objectFit\". Did you mean to use the \"style\" prop instead?`, img);\n                }\n                if (img.getAttribute(\"objectPosition\") || img.getAttribute(\"objectposition\")) {\n                    console.error(`Image has unknown prop \"objectPosition\". Did you mean to use the \"style\" prop instead?`, img);\n                }\n                if (img.getAttribute(\"alt\") === null) {\n                    console.error(`Image is missing required \"alt\" property. Please add Alternative Text to describe the image for screen readers and search engines.`);\n                }\n            }\n            if (img.complete) {\n                handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete);\n            }\n        }, [\n            srcString,\n            placeholder,\n            onLoadRef,\n            onLoadingCompleteRef,\n            setBlurComplete,\n            onError\n        ]),\n        onLoad: (event)=>{\n            const img = event.currentTarget;\n            handleLoading(img, srcString, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete);\n        },\n        onError: (event)=>{\n            // if the real image fails to load, this will ensure \"alt\" is visible\n            setShowAltText(true);\n            if (placeholder === \"blur\") {\n                // If the real image fails to load, this will still remove the placeholder.\n                setBlurComplete(true);\n            }\n            if (onError) {\n                onError(event);\n            }\n        }\n    })));\n};\nif ((typeof exports.default === \"function\" || typeof exports.default === \"object\" && exports.default !== null) && typeof exports.default.__esModule === \"undefined\") {\n    Object.defineProperty(exports.default, \"__esModule\", {\n        value: true\n    });\n    Object.assign(exports.default, exports);\n    module.exports = exports.default;\n} //# sourceMappingURL=image.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/image.js\n");

/***/ }),

/***/ "./pages/posts/[id].js":
/*!*****************************!*\
  !*** ./pages/posts/[id].js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PostPage),\n/* harmony export */   \"getStaticPaths\": () => (/* binding */ getStaticPaths),\n/* harmony export */   \"getStaticProps\": () => (/* binding */ getStaticProps)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../styles/Posts.module.css */ \"./styles/Posts.module.css\");\n/* harmony import */ var _styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"./node_modules/next/image.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_image__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _config_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../config/data */ \"./config/data.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-markdown */ \"react-markdown\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_markdown__WEBPACK_IMPORTED_MODULE_4__]);\nreact_markdown__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\nconst getStaticPaths = async ()=>{\n    const paths = _config_data__WEBPACK_IMPORTED_MODULE_3__.blogList.map((e)=>({\n            params: {\n                id: e.id.toString()\n            }\n        }));\n    return {\n        paths,\n        fallback: false\n    };\n};\nconst getStaticProps = async (context)=>{\n    const id = context.params.id;\n    let data;\n    _config_data__WEBPACK_IMPORTED_MODULE_3__.blogList.map((e)=>e.id == id ? data = e : {});\n    return {\n        props: {\n            post: data\n        }\n    };\n};\nfunction PostPage({ post  }) {\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const id = router.query.id;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_container),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_banner),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        children: post.title\n                    }, void 0, false, {\n                        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                        lineNumber: 30,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_tag),\n                        children: post.category\n                    }, void 0, false, {\n                        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                        lineNumber: 31,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                        src: post.cover,\n                        alt: \"cover\",\n                        width: \"400\",\n                        height: \"400\"\n                    }, void 0, false, {\n                        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                        lineNumber: 32,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                lineNumber: 29,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_wrapper),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_middlewrapper),\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_markdown__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            children: post.description\n                        }, void 0, false, {\n                            fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                            lineNumber: 36,\n                            columnNumber: 21\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                        lineNumber: 35,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: (_styles_Posts_module_css__WEBPACK_IMPORTED_MODULE_5___default().post_rightwrapper),\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                                children: post.authorName\n                            }, void 0, false, {\n                                fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                                lineNumber: 42,\n                                columnNumber: 21\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_image__WEBPACK_IMPORTED_MODULE_2___default()), {\n                                src: post.authorAvatar,\n                                alt: \"authorAvatar\",\n                                width: \"100\",\n                                height: \"100\"\n                            }, void 0, false, {\n                                fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                                lineNumber: 43,\n                                columnNumber: 21\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                        lineNumber: 41,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n                lineNumber: 34,\n                columnNumber: 13\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/anil/Documents/New-Church/pages/posts/[id].js\",\n        lineNumber: 28,\n        columnNumber: 9\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9wb3N0cy9baWRdLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUF1QztBQUNZO0FBQ3JCO0FBQ2U7QUFDRjtBQUVwQyxNQUFNSyxpQkFBaUIsVUFBWTtJQUN0QyxNQUFNQyxRQUFRSCxzREFBWSxDQUFDSyxDQUFBQSxJQUFNO1lBQUVDLFFBQVE7Z0JBQUNDLElBQUlGLEVBQUVFLEVBQUUsQ0FBQ0MsUUFBUTtZQUFFO1FBQUM7SUFDaEUsT0FBTztRQUNITDtRQUNBTSxVQUFVLEtBQUs7SUFDbkI7QUFDSixFQUFDO0FBRU0sTUFBTUMsaUJBQWlCLE9BQU9DLFVBQVk7SUFDN0MsTUFBTUosS0FBS0ksUUFBUUwsTUFBTSxDQUFDQyxFQUFFO0lBQzVCLElBQUlLO0lBQ0paLHNEQUFZLENBQUNLLENBQUFBLElBQUssRUFBR0UsRUFBRSxJQUFJQSxLQUFNSyxPQUFPUCxJQUFJLENBQUMsQ0FBQztJQUM5QyxPQUFPO1FBQ0hRLE9BQU87WUFBQ0MsTUFBTUY7UUFBSTtJQUN0QjtBQUNKLEVBQUM7QUFFYyxTQUFTRyxTQUFTLEVBQUNELEtBQUksRUFBQyxFQUFFO0lBQ3JDLE1BQU1FLFNBQVNuQixzREFBU0E7SUFDeEIsTUFBTVUsS0FBS1MsT0FBT0MsS0FBSyxDQUFDVixFQUFFO0lBQzFCLHFCQUNJLDhEQUFDVztRQUFJQyxXQUFXckIsZ0ZBQXFCOzswQkFDakMsOERBQUNvQjtnQkFBSUMsV0FBV3JCLDZFQUFrQjs7a0NBQzlCLDhEQUFDd0I7a0NBQUlSLEtBQUtTLEtBQUs7Ozs7OztrQ0FDZiw4REFBQ0M7d0JBQUtMLFdBQVdyQiwwRUFBZTtrQ0FBR2dCLEtBQUtZLFFBQVE7Ozs7OztrQ0FDaEQsOERBQUMzQixtREFBS0E7d0JBQUM0QixLQUFLYixLQUFLYyxLQUFLO3dCQUFFQyxLQUFJO3dCQUFRQyxPQUFNO3dCQUFNQyxRQUFPOzs7Ozs7Ozs7Ozs7MEJBRTNELDhEQUFDYjtnQkFBSUMsV0FBV3JCLDhFQUFtQjs7a0NBQy9CLDhEQUFDb0I7d0JBQUlDLFdBQVdyQixvRkFBeUI7a0NBQ3JDLDRFQUFDRyxzREFBYUE7c0NBQ1RhLEtBQUtvQixXQUFXOzs7Ozs7Ozs7OztrQ0FJekIsOERBQUNoQjt3QkFBSUMsV0FBV3JCLG1GQUF3Qjs7MENBQ3BDLDhEQUFDc0M7MENBQUl0QixLQUFLdUIsVUFBVTs7Ozs7OzBDQUNwQiw4REFBQ3RDLG1EQUFLQTtnQ0FBQzRCLEtBQU9iLEtBQUt3QixZQUFZO2dDQUFFVCxLQUFJO2dDQUFlQyxPQUFNO2dDQUFNQyxRQUFPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPM0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2NodXJjaC8uL3BhZ2VzL3Bvc3RzL1tpZF0uanM/Nzk2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9yb3V0ZXJcIlxuaW1wb3J0IHN0eWxlcyBmcm9tICcuLi8uLi9zdHlsZXMvUG9zdHMubW9kdWxlLmNzcyc7XG5pbXBvcnQgSW1hZ2UgZnJvbSAnbmV4dC9pbWFnZSdcbmltcG9ydCB7IGJsb2dMaXN0IH0gZnJvbSAnLi4vLi4vY29uZmlnL2RhdGEnO1xuaW1wb3J0IFJlYWN0TWFya2Rvd24gZnJvbSBcInJlYWN0LW1hcmtkb3duXCI7XG5cbmV4cG9ydCBjb25zdCBnZXRTdGF0aWNQYXRocyA9IGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwYXRocyA9IGJsb2dMaXN0Lm1hcChlID0+ICh7IHBhcmFtczoge2lkOiBlLmlkLnRvU3RyaW5nKCl9fSkpXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aHMsXG4gICAgICAgIGZhbGxiYWNrOiBmYWxzZVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IGdldFN0YXRpY1Byb3BzID0gYXN5bmMgKGNvbnRleHQpID0+IHtcbiAgICBjb25zdCBpZCA9IGNvbnRleHQucGFyYW1zLmlkO1xuICAgIGxldCBkYXRhO1xuICAgIGJsb2dMaXN0Lm1hcChlID0+IChlLmlkID09IGlkKSA/IGRhdGEgPSBlIDoge30pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb3BzOiB7cG9zdDogZGF0YX1cbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBvc3RQYWdlKHtwb3N0fSkge1xuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xuICAgIGNvbnN0IGlkID0gcm91dGVyLnF1ZXJ5LmlkO1xuICAgIHJldHVybihcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5wb3N0X2NvbnRhaW5lcn0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnBvc3RfYmFubmVyfT5cbiAgICAgICAgICAgICAgICA8aDE+e3Bvc3QudGl0bGV9PC9oMT5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9e3N0eWxlcy5wb3N0X3RhZ30+e3Bvc3QuY2F0ZWdvcnl9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDxJbWFnZSBzcmM9e3Bvc3QuY292ZXJ9IGFsdD1cImNvdmVyXCIgd2lkdGg9XCI0MDBcIiBoZWlnaHQ9XCI0MDBcIi8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtzdHlsZXMucG9zdF93cmFwcGVyfT5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLnBvc3RfbWlkZGxld3JhcHBlcn0+XG4gICAgICAgICAgICAgICAgICAgIDxSZWFjdE1hcmtkb3duPlxuICAgICAgICAgICAgICAgICAgICAgICAge3Bvc3QuZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgIDwvUmVhY3RNYXJrZG93bj5cbiAgICAgICAgICAgICAgICAgICAgey8qIDxwPntwb3N0LmRlc2NyaXB0aW9ufTwvcD4gKi99XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5wb3N0X3JpZ2h0d3JhcHBlcn0+XG4gICAgICAgICAgICAgICAgICAgIDxoMj57cG9zdC5hdXRob3JOYW1lfTwvaDI+XG4gICAgICAgICAgICAgICAgICAgIDxJbWFnZSBzcmMgPSB7cG9zdC5hdXRob3JBdmF0YXJ9IGFsdD0nYXV0aG9yQXZhdGFyJyB3aWR0aD1cIjEwMFwiIGhlaWdodD1cIjEwMFwiLz5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgXG4gICAgICAgIDwvZGl2PlxuICAgIClcblxufSJdLCJuYW1lcyI6WyJ1c2VSb3V0ZXIiLCJzdHlsZXMiLCJJbWFnZSIsImJsb2dMaXN0IiwiUmVhY3RNYXJrZG93biIsImdldFN0YXRpY1BhdGhzIiwicGF0aHMiLCJtYXAiLCJlIiwicGFyYW1zIiwiaWQiLCJ0b1N0cmluZyIsImZhbGxiYWNrIiwiZ2V0U3RhdGljUHJvcHMiLCJjb250ZXh0IiwiZGF0YSIsInByb3BzIiwicG9zdCIsIlBvc3RQYWdlIiwicm91dGVyIiwicXVlcnkiLCJkaXYiLCJjbGFzc05hbWUiLCJwb3N0X2NvbnRhaW5lciIsInBvc3RfYmFubmVyIiwiaDEiLCJ0aXRsZSIsInNwYW4iLCJwb3N0X3RhZyIsImNhdGVnb3J5Iiwic3JjIiwiY292ZXIiLCJhbHQiLCJ3aWR0aCIsImhlaWdodCIsInBvc3Rfd3JhcHBlciIsInBvc3RfbWlkZGxld3JhcHBlciIsImRlc2NyaXB0aW9uIiwicG9zdF9yaWdodHdyYXBwZXIiLCJoMiIsImF1dGhvck5hbWUiLCJhdXRob3JBdmF0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/posts/[id].js\n");

/***/ }),

/***/ "./node_modules/next/image.js":
/*!************************************!*\
  !*** ./node_modules/next/image.js ***!
  \************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/image */ \"./node_modules/next/dist/client/image.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyR0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaHVyY2gvLi9ub2RlX21vZHVsZXMvbmV4dC9pbWFnZS5qcz8wNTM1Il0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9kaXN0L2NsaWVudC9pbWFnZScpXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/image.js\n");

/***/ }),

/***/ "../shared/lib/head":
/*!***********************************************!*\
  !*** external "next/dist/shared/lib/head.js" ***!
  \***********************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/head.js");

/***/ }),

/***/ "../shared/lib/image-blur-svg":
/*!*********************************************************!*\
  !*** external "next/dist/shared/lib/image-blur-svg.js" ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-blur-svg.js");

/***/ }),

/***/ "../shared/lib/image-config-context":
/*!***************************************************************!*\
  !*** external "next/dist/shared/lib/image-config-context.js" ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config-context.js");

/***/ }),

/***/ "../shared/lib/image-config":
/*!*******************************************************!*\
  !*** external "next/dist/shared/lib/image-config.js" ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-config.js");

/***/ }),

/***/ "next/dist/shared/lib/image-loader":
/*!****************************************************!*\
  !*** external "next/dist/shared/lib/image-loader" ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/image-loader");

/***/ }),

/***/ "../shared/lib/utils":
/*!************************************************!*\
  !*** external "next/dist/shared/lib/utils.js" ***!
  \************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/utils.js");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react-markdown":
/*!*********************************!*\
  !*** external "react-markdown" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-markdown");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/posts/[id].js"));
module.exports = __webpack_exports__;

})();